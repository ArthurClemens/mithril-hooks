!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports,require("mithril")):"function"==typeof define&&define.amd?define(["exports","mithril"],e):e((t="undefined"!=typeof globalThis?globalThis:t||self).mithrilHooks={},t.m)}(this,(function(t,e){"use strict";function s(t){return t&&"object"==typeof t&&"default"in t?t:{default:t}}var n=s(e);let o;const r=Function.prototype.call.bind(Function.prototype.call),a=()=>n.default.redraw(),u=t=>{const e=o,s=e.depsIndex++,n=e.depsStates[s]||[],r=void 0===t||!!Array.isArray(t)&&(t.length>0?!t.every(((t,e)=>t===n[e])):!e.setup);return void 0!==t&&(e.depsStates[s]=t),r},i=(t=!1)=>(e,s)=>{const n=o;if(u(s)){const s=n.depsIndex,o=()=>{const t=e();"function"==typeof t&&(n.teardowns.set(s,t),n.teardowns.set("_",a))},r=n.teardowns.get(s);try{"function"==typeof r&&r()}finally{n.teardowns.delete(s)}n.updates.push(t?()=>new Promise((t=>requestAnimationFrame(t))).then(o):o)}},c=(t,e)=>{const s=o,n=s.statesIndex++;return s.setup||(s.states[n]=t),[s.states[n],t=>{const o=s.states[n],r=e?e(t,n):t;s.states[n]=r,JSON.stringify(r)!==JSON.stringify(o)&&a()},n]},d=i(!0),f=i(),p=(t,e)=>{const s=o,n=u(e),[r,a]=s.setup?c():c(t());return s.setup&&n&&a(t()),r};t.useCallback=(t,e)=>p((()=>t),e),t.useEffect=d,t.useLayoutEffect=f,t.useMemo=p,t.useReducer=(t,e,s)=>{const n=o,r=!n.setup&&s?s(e):e;return(()=>{const[e,s,o]=c(r);return[e,e=>{const r=n.states[o];return s(t(r,e))}]})()},t.useRef=t=>{const[e]=c({current:t});return e},t.useState=t=>{const e=o;return c(t,((t,s)=>"function"==typeof t?t(e.states[s],s):t))},t.withHooks=(t,e)=>{const s=t=>{const e=o;o=t.state;try{t.state.updates.forEach(r)}finally{Object.assign(t.state,{setup:!0,updates:[],depsIndex:0,statesIndex:0}),o=e}};return{oninit:t=>{Object.assign(t.state,{setup:!1,states:[],statesIndex:0,depsStates:[],depsIndex:0,updates:[],cleanups:new Map,teardowns:new Map})},oncreate:s,onupdate:s,view:s=>{const n=o;o=s.state;try{return t(Object.assign(Object.assign(Object.assign({},e),s.attrs),{vnode:s,children:s.children}))}catch(t){console.error(t)}finally{o=n}},onremove:t=>{const e=o;o=t.state;try{[...t.state.teardowns.values()].forEach(r)}finally{o=e}}}},Object.defineProperty(t,"__esModule",{value:!0})}));
