{"version":3,"file":"mithril-hooks.js","sources":["../src/index.js"],"sourcesContent":["import m from \"mithril\";\n\nlet currentState;\n\nconst call = Function.prototype.call.bind(\n  Function.prototype.call\n);\n\nconst scheduleRender = () =>\n  // Call m within the function body so environments with a global instance of m (like flems.io) don't complain\n  m.redraw();\n\nconst updateDeps = deps => {\n  const state = currentState;\n  const index = state.depsIndex++;\n  const prevDeps = state.depsStates[index] || [];\n  const shouldRecompute = deps === undefined\n    ? true // Always compute\n    : Array.isArray(deps)\n      ? deps.length > 0\n        ? !deps.every((x,i) => x === prevDeps[i]) // Only compute when one of the deps has changed\n        : !state.setup // Empty array: only compute at mount\n      : false; // Invalid value, do nothing\n  state.depsStates[index] = deps;\n  return shouldRecompute;\n};\n\nconst effect = (isAsync = false) => (fn, deps) => {\n  const state = currentState;\n  const shouldRecompute = updateDeps(deps);\n  if (shouldRecompute) {\n    const runCallbackFn = () => {\n      const teardown = fn();\n      // A callback may return a function. If any, add it to the teardowns:\n      if (typeof teardown === \"function\") {\n        // Store this this function to be called at unmount\n        state.teardowns.set(fn, teardown);\n        // At unmount, call re-render at least once\n        state.teardowns.set(\"_\", scheduleRender);\n      }\n    };\n    state.updates.push(\n      isAsync\n        ? () => new Promise(resolve => requestAnimationFrame(resolve)).then(runCallbackFn)\n        : runCallbackFn\n    );\n  }\n};\n\nconst updateState = (initialValue, newValueFn = value => value) => {\n  const state = currentState;\n  const index = state.statesIndex++;\n  if (!state.setup) {\n    state.states[index] = initialValue;\n  }\n  return [\n    state.states[index],\n    value => {\n      const previousValue = state.states[index];\n      const newValue = newValueFn(value, index);\n      state.states[index] = newValue;\n      if (JSON.stringify(newValue) !== JSON.stringify(previousValue)) {\n        scheduleRender(); // Calling redraw multiple times: Mithril will drop extraneous redraw calls, so performance should not be an issue\n      }\n    },\n    index\n  ];\n};\n\nexport const useState = initialValue => {\n  const state = currentState;\n  const newValueFn = (value, index) =>\n    typeof value === \"function\"\n      ? value(state.states[index])\n      : value;\n  return updateState(initialValue, newValueFn);\n};\n\nexport const useEffect = effect(true);\nexport const useLayoutEffect = effect();\n\nexport const useReducer = (reducer, initialArg, initFn) => {\n  const state = currentState;\n  // From the React docs: You can also create the initial state lazily. To do this, you can pass an init function as the third argument. The initial state will be set to init(initialArg).\n  const initialValue = !state.setup && initFn\n    ? initFn(initialArg)\n    : initialArg;\n\n  const getValueDispatch = () => {\n    const [value, setValue, index] = updateState(initialValue);\n    const dispatch = action => {\n      const previousValue = state.states[index];\n      return setValue( // Next state:\n        reducer(previousValue, action)\n      );\n    };\n    return [value, dispatch];\n  };\n  \n  return getValueDispatch();\n};\n  \nexport const useRef = initialValue => {\n  // A ref is a persisted object that will not be updated, so it has no setter\n  const [value] = updateState({ current: initialValue });\n  return value;\n};\n  \nexport const useMemo = (fn, deps) => {\n  const state = currentState;\n  const shouldRecompute = updateDeps(deps);\n  const [memoized, setMemoized] = !state.setup\n    ? updateState(fn())\n    : updateState();\n  if (state.setup && shouldRecompute) {\n    setMemoized(fn());\n  }\n  return memoized;\n};\n  \nexport const useCallback = (fn, deps) =>\n  useMemo(() => fn, deps);\n    \nexport const withHooks = (component, initialProps) => {\n\n  const init = vnode => {\n    Object.assign(vnode.state, {\n      setup: false,\n      states: [],\n      statesIndex: 0,\n      depsStates: [],\n      depsIndex: 0,\n      updates: [],\n      teardowns: new Map // Keep track of teardowns even when the update was run only once\n    });\n  };\n  \n  const update = vnode => {\n    const prevState = currentState;\n    currentState = vnode.state;\n    try {\n      vnode.state.updates.forEach(call);\n    }\n    finally {\n      Object.assign(vnode.state, {\n        setup: true,\n        updates: [],\n        depsIndex: 0,\n        statesIndex: 0,\n      });\n      currentState = prevState;\n    }\n  };\n  \n  const render = vnode => {\n    const prevState = currentState;\n    currentState = vnode.state;\n    try {\n      return component({\n        ...initialProps,\n        ...vnode.attrs,\n        vnode,\n        children: vnode.children,\n      });\n    }\n    catch (e) {\n      console.error(e); // eslint-disable-line no-console\n    }\n    finally {\n      currentState = prevState;\n    }\n  };\n  \n  const teardown = vnode => {\n    const prevState = currentState;\n    currentState = vnode.state;\n    try {\n      [...vnode.state.teardowns.values()].forEach(call);\n    }\n    finally {\n      currentState = prevState;\n    }\n  };\n      \n  return {\n    oninit: init,\n    oncreate: update,\n    onupdate: update,\n    view: render,\n    onremove: teardown,\n  };\n};\n"],"names":["currentState","call","Function","prototype","bind","scheduleRender","m","redraw","updateDeps","deps","state","index","depsIndex","prevDeps","depsStates","shouldRecompute","undefined","Array","isArray","length","every","x","i","setup","effect","isAsync","fn","runCallbackFn","teardown","teardowns","set","updates","push","Promise","resolve","requestAnimationFrame","then","updateState","initialValue","newValueFn","value","statesIndex","states","previousValue","newValue","JSON","stringify","useEffect","useLayoutEffect","useMemo","memoized","setMemoized","reducer","initialArg","initFn","setValue","action","current","component","initialProps","update","vnode","prevState","forEach","Object","assign","oninit","Map","oncreate","onupdate","view","attrs","children","e","console","error","onremove","values"],"mappings":"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"}